// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./node_modules/@prisma/client"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id Int @id @default(autoincrement())
  name String
  email String 
  auth_id String @unique // 任意に生成したユーザーID
  password String
  posts Post[]

  @@map("user")
}

// 問い合わせの種類を表す列挙型
enum InquiryType {
  INBOUND
  OUTBOUND

  @@map("inquirytype")
}

// 問い合わせ者の性別を表す列挙型
enum Gender {
  MALE
  FEMALE
  
  @@map("gender")
}

// 問い合わせ者の続柄を表す列挙型
enum Relationship {
  SELF
  FAMILY
  OTHER

  @@map("relationship")
}

// カテゴリーを表す列挙型
enum Category {
  PRODUCT
  PURCHASE
  APPLICATION
  COMPLAINT
  OTHER

  @@map("category")
}

model Post {
  id Int @id @default(autoincrement())
  user User @relation(fields:[userId],references: [id])
  userId Int
  auth_id String // User モデルの auth_id を参照
  startTime DateTime @default(now()) // 対応開始時間（作成時間）
  endTime DateTime // 対応終了時間（手入力）
  inquiryType InquiryType //インバウンド/アウトバウンド（選択）
  inquirerName String? // 問い合わせ者氏名（任意）
  inquirerGender Gender? // 問い合わせ者性別（選択、任意）
  inquirerPhone String? // 問い合わせ者連絡先電話番号（任意）
  inquirerRelationship  Relationship? // 問い合わせ者続柄（選択、任意）
  inquirerRelationshipOther String?//問い合わせ者続柄その他の詳細
  category Category     // カテゴリー（列挙型）
  message String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

   @@map("post") 
}